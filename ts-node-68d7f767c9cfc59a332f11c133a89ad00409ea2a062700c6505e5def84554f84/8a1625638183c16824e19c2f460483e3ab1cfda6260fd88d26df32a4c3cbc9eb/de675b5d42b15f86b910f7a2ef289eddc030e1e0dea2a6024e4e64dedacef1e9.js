"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var fs_1 = require("fs");
var path_1 = require("path");
var _1 = require("./common/");
var filePath = path_1.join(__dirname, './data/organizations.db.json');
var Organization = (function () {
    function Organization(data) {
        this.orgId = _1.createGUID();
        // copies every property of data to this
        Object.assign(this, data);
    }
    Organization.getAllOrganizations = function () {
        return JSON.parse(fs_1.readFileSync(filePath).toString());
    };
    Organization.getOrganization = function (id) {
        return this.getAllOrganizations().find(function (l) { return l.orgId === id; });
    };
    Organization.createOrganization = function (data) {
        var organization = new Organization(data);
        var orgs = this.getAllOrganizations();
        orgs.push(organization);
        this.saveAllOrganizations(orgs);
        return organization;
    };
    Organization.updateOrganization = function (data) {
        var orgs = this.getAllOrganizations();
        var orgIndex = orgs.findIndex(function (l) { return l.orgId === data.id; });
        orgs.splice(orgIndex, 1, data);
        this.saveAllOrganizations(orgs);
        return data;
    };
    Organization.deleteOrganization = function (id) {
        var orgs = this.getAllOrganizations();
        var orgIndex = orgs.findIndex(function (l) { return l.orgId === id; });
        orgs.splice(orgIndex, 1);
        this.saveAllOrganizations(orgs);
    };
    Organization.saveAllOrganizations = function (organizationList) {
        fs_1.writeFileSync(filePath, JSON.stringify(organizationList, null, 2));
    };
    return Organization;
}());
exports.Organization = Organization;
exports.OrganizationRouter = express.Router();
exports.OrganizationRouter.get('/organization-list', function (req, res) {
    res.json(Organization.getAllOrganizations());
});
exports.OrganizationRouter.get('/:orgId', function (req, res) {
    res.json(Organization.getOrganization(req.params.id));
});
// create organization
exports.OrganizationRouter.post('/', function (req, res) {
    res.json(Organization.createOrganization(req.body));
});
// update organization
exports.OrganizationRouter.post('/:orgId', function (req, res) {
    var data = req.body;
    data.id = req.params.id;
    res.json(Organization.updateOrganization(data));
});
// delete organization
exports.OrganizationRouter.delete('/:orgId', function (req, res) {
    var id = req.params.id;
    res.json(Organization.deleteOrganization(id));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvaG9zcG9naC9EZXNrdG9wL2JldFByb2plY3RMaWJyYXJpdW0vbGlicmFyaXVtL3NyYy9zZXJ2ZXItYXBpL29yZ2FuaXphdGlvbi50cyIsInNvdXJjZXMiOlsiL2hvbWUvaG9zcG9naC9EZXNrdG9wL2JldFByb2plY3RMaWJyYXJpdW0vbGlicmFyaXVtL3NyYy9zZXJ2ZXItYXBpL29yZ2FuaXphdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFtQztBQUNuQyx5QkFBK0M7QUFDL0MsNkJBQTBCO0FBQzFCLDhCQUE4QztBQUc5QyxJQUFNLFFBQVEsR0FBRyxXQUFJLENBQUMsU0FBUyxFQUFFLDhCQUE4QixDQUFDLENBQUM7QUFFakU7SUFTRSxzQkFBWSxJQUFJO1FBUmhCLFVBQUssR0FBVyxhQUFVLEVBQUUsQ0FBQztRQVMzQix3Q0FBd0M7UUFDeEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVNLGdDQUFtQixHQUExQjtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRU0sNEJBQWUsR0FBdEIsVUFBdUIsRUFBVTtRQUMvQixNQUFNLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEtBQUssS0FBSyxFQUFFLEVBQWQsQ0FBYyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVNLCtCQUFrQixHQUF6QixVQUEwQixJQUFJO1FBQzVCLElBQU0sWUFBWSxHQUFHLElBQUksWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVDLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7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QyxZQUFZLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNoRCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge3JlYWRGaWxlU3luYywgd3JpdGVGaWxlU3luY30gZnJvbSAnZnMnO1xuaW1wb3J0IHtqb2lufSBmcm9tICdwYXRoJztcbmltcG9ydCB7Y3JlYXRlR1VJRCwgQWRkcmVzc30gZnJvbSAnLi9jb21tb24vJztcbmltcG9ydCB7Q291bnRyeX0gZnJvbSAnLi9jb3VudHJ5JztcblxuY29uc3QgZmlsZVBhdGggPSBqb2luKF9fZGlybmFtZSwgJy4vZGF0YS9vcmdhbml6YXRpb25zLmRiLmpzb24nKTtcblxuZXhwb3J0IGNsYXNzIE9yZ2FuaXphdGlvbiB7XG4gIG9yZ0lkOiBzdHJpbmcgPSBjcmVhdGVHVUlEKCk7XG4gIG5hbWU6IHN0cmluZztcbiAgYWRkcmVzczogQWRkcmVzcztcbiAgYnJhbmNoOiBPcmdhbml6YXRpb24gfCBudWxsO1xuICBlbWFpbD86IHN0cmluZztcbiAgcGhvbmVOdW1iZXI/OiBzdHJpbmc7XG4gIGNvdW50cnk6IENvdW50cnk7XG5cbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIC8vIGNvcGllcyBldmVyeSBwcm9wZXJ0eSBvZiBkYXRhIHRvIHRoaXNcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGRhdGEpO1xuICB9XG5cbiAgc3RhdGljIGdldEFsbE9yZ2FuaXphdGlvbnMoKTogT3JnYW5pemF0aW9uW10ge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHJlYWRGaWxlU3luYyhmaWxlUGF0aCkudG9TdHJpbmcoKSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0T3JnYW5pemF0aW9uKGlkOiBzdHJpbmcpOiBPcmdhbml6YXRpb24ge1xuICAgIHJldHVybiB0aGlzLmdldEFsbE9yZ2FuaXphdGlvbnMoKS5maW5kKGwgPT4gbC5vcmdJZCA9PT0gaWQpO1xuICB9XG5cbiAgc3RhdGljIGNyZWF0ZU9yZ2FuaXphdGlvbihkYXRhKSB7XG4gICAgY29uc3Qgb3JnYW5pemF0aW9uID0gbmV3IE9yZ2FuaXphdGlvbihkYXRhKTtcbiAgICBjb25zdCBvcmdzID0gdGhpcy5nZXRBbGxPcmdhbml6YXRpb25zKCk7XG4gICAgb3Jncy5wdXNoKG9yZ2FuaXphdGlvbik7XG4gICAgdGhpcy5zYXZlQWxsT3JnYW5pemF0aW9ucyhvcmdzKTtcbiAgICByZXR1cm4gb3JnYW5pemF0aW9uO1xuICB9XG5cbiAgc3RhdGljIHVwZGF0ZU9yZ2FuaXphdGlvbihkYXRhKSB7XG4gICAgY29uc3Qgb3JncyA9IHRoaXMuZ2V0QWxsT3JnYW5pemF0aW9ucygpO1xuICAgIGNvbnN0IG9yZ0luZGV4ID0gb3Jncy5maW5kSW5kZXgobCA9PiBsLm9yZ0lkID09PSBkYXRhLmlkKTtcbiAgICBvcmdzLnNwbGljZShvcmdJbmRleCwgMSwgZGF0YSk7XG4gICAgdGhpcy5zYXZlQWxsT3JnYW5pemF0aW9ucyhvcmdzKTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIHN0YXRpYyBkZWxldGVPcmdhbml6YXRpb24oaWQpIHtcbiAgICBjb25zdCBvcmdzID0gdGhpcy5nZXRBbGxPcmdhbml6YXRpb25zKCk7XG4gICAgY29uc3Qgb3JnSW5kZXggPSBvcmdzLmZpbmRJbmRleChsID0+IGwub3JnSWQgPT09IGlkKTtcbiAgICBvcmdzLnNwbGljZShvcmdJbmRleCwgMSk7XG4gICAgdGhpcy5zYXZlQWxsT3JnYW5pemF0aW9ucyhvcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBzYXZlQWxsT3JnYW5pemF0aW9ucyhvcmdhbml6YXRpb25MaXN0KSB7XG4gICAgd3JpdGVGaWxlU3luYyhmaWxlUGF0aCwgSlNPTi5zdHJpbmdpZnkob3JnYW5pemF0aW9uTGlzdCwgbnVsbCwgMikpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBPcmdhbml6YXRpb25Sb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5Pcmdhbml6YXRpb25Sb3V0ZXIuZ2V0KCcvb3JnYW5pemF0aW9uLWxpc3QnLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLmpzb24oT3JnYW5pemF0aW9uLmdldEFsbE9yZ2FuaXphdGlvbnMoKSk7XG59KTtcblxuT3JnYW5pemF0aW9uUm91dGVyLmdldCgnLzpvcmdJZCcsIChyZXEsIHJlcykgPT4ge1xuICByZXMuanNvbihPcmdhbml6YXRpb24uZ2V0T3JnYW5pemF0aW9uKHJlcS5wYXJhbXMuaWQpKTtcbn0pO1xuXG4vLyBjcmVhdGUgb3JnYW5pemF0aW9uXG5Pcmdhbml6YXRpb25Sb3V0ZXIucG9zdCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuanNvbihPcmdhbml6YXRpb24uY3JlYXRlT3JnYW5pemF0aW9uKHJlcS5ib2R5KSk7XG59KTtcblxuLy8gdXBkYXRlIG9yZ2FuaXphdGlvblxuT3JnYW5pemF0aW9uUm91dGVyLnBvc3QoJy86b3JnSWQnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xuICBkYXRhLmlkID0gcmVxLnBhcmFtcy5pZDtcbiAgcmVzLmpzb24oT3JnYW5pemF0aW9uLnVwZGF0ZU9yZ2FuaXphdGlvbihkYXRhKSk7XG59KTtcblxuLy8gZGVsZXRlIG9yZ2FuaXphdGlvblxuT3JnYW5pemF0aW9uUm91dGVyLmRlbGV0ZSgnLzpvcmdJZCcsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XG4gIHJlcy5qc29uKE9yZ2FuaXphdGlvbi5kZWxldGVPcmdhbml6YXRpb24oaWQpKTtcbn0pO1xuXG5cbiJdfQ==