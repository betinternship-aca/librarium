"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by hospogh on 7/29/17.
 */
var express = require("express");
var path_1 = require("path");
var fs_1 = require("fs");
var common_1 = require("./common");
var ordersFilePath = path_1.join(__dirname, 'data/orders.db.json');
// const booksFilePath = join(__dirname, 'data/books.db.json');
// const usersFilePath = join(__dirname, 'data/users.db.json');
var Order = (function () {
    function Order(_a) {
        var orderId = _a.orderId, userId = _a.userId, bookId = _a.bookId, orderDate = _a.orderDate, orderDays = _a.orderDays;
        this.orderId = common_1.createGUID();
        if (orderId) {
            this.orderId = orderId;
        }
        if (userId) {
            this.userId = userId;
        }
        if (bookId) {
            this.bookId = bookId;
        }
        var nowDate = new Date();
        this.orderDate = orderDate && nowDate.valueOf() < orderDate.valueOf() ? orderDate : nowDate;
        this.orderDays = orderDays && orderDays > 0 ? Number.parseInt(orderDays) : 30;
    }
    Order.getAllOrders = function () {
        return JSON.parse(fs_1.readFileSync(ordersFilePath).toString());
    };
    Order.getUserOrders = function (userId) {
        return Order.getAllOrders().filter(function (o) { return o.userId === userId; });
    };
    Order.getBookOrders = function (bookId) {
        return Order.getAllOrders().filter(function (o) { return o.bookId === bookId; });
    };
    Order.createOrder = function (data) {
        var order = new Order(data);
        var orders = this.getAllOrders();
        orders.push(order);
        this.saveAllOrders(orders);
        return order;
    };
    Order.updateOrder = function (order) {
        var orders = this.getAllOrders();
        var index = this.getOrderIndex(order.orderId);
        orders.splice(index, 1, order);
        this.saveAllOrders(orders);
        return order;
    };
    Order.deleteOrder = function (orderId) {
        var orders = this.getAllOrders();
        var index = this.getOrderIndex(orderId);
        orders.splice(index, 1);
        this.saveAllOrders(orders);
    };
    Order.saveAllOrders = function (ordersList) {
        fs_1.writeFileSync(ordersFilePath, JSON.stringify(ordersList, null, 2));
    };
    Order.getOrder = function (orderId) {
        return Order.getAllOrders().find(function (o) { return o.orderId === orderId; });
    };
    Order.getOrderIndex = function (orderId) {
        return Order.getAllOrders().findIndex(function (o) { return o.orderId === orderId; });
    };
    return Order;
}());
exports.Order = Order;
exports.OrderRouter = express.Router();
// get all orders
exports.OrderRouter.get('/order-list', function (req, res) { return res.json(Order.getAllOrders()); });
// get order
exports.OrderRouter.get('/:orderId', function (req, res) { return res.json(Order.getOrder(req.params.orderId)); });
// create order
// req.body --> server.ts   app.use(bodyParser.json()); // get from req.body wanted js object
exports.OrderRouter.post('/', function (req, res) { return res.json(Order.createOrder(req.body)); });
// update order
exports.OrderRouter.post('/:orderId', function (req, res) {
    var data = req.body;
    data.id = req.params.orderId;
    res.json(Order.updateOrder(data));
});
// delete order
exports.OrderRouter.delete('/:orderId', function (req, res) { return res.json(Order.deleteOrder(req.params.orderId)); });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,